/**


Given the head of a singly linked list, return true if it is a palindrome or false otherwise.


**/



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
bool isPalindrome(struct ListNode* head) {

    struct ListNode *current, *previous, *head2;

    int len=0;
    current = head;
    while(current!=NULL){
        len++;
        current = current->next;
    }
    if(len>3){
        current = head->next;
        previous = head;
        head2 = head->next;
        for(int i=0;i<(len/2)-1;i++){
            head2 = head2->next;
            current->next = previous;
            previous = current;
            current = head2;
        }
        if(len%2==1) head2 = head2->next;
        for(int i=0;i<(len/2);i++){
            if(previous->val != head2->val) return 0;
            previous = previous->next;
            head2 = head2->next;
        }
    }
    else if(len==3) return head->val==head->next->next->val;
    else if(len==2) return head->val==head->next->val;
    else if(len==1) return 1;


    return 1;
}
